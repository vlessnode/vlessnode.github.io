<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vlessnode.github.io/news/article-109296.htm" />
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Python trino执行hive insert overwrite不生效的问题</title>
        <meta name="description" content="使用python的trino包执行insert overwrite，但是overwrite却没有生效的问题 根据trino的官网介绍的insert overwrite的开启方式，开启hive的inse" />
        <link rel="icon" href="/assets/website/img/vlessnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Vless Node机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vlessnode.github.io/news/article-109296.htm" />
    <meta property="og:site_name" content="Vless Node机场订阅官网" />
    <meta property="og:title" content="Python trino执行hive insert overwrite不生效的问题" />
    <meta property="og:image" content="https://vlessnode.github.io/uploads/20240826/3eea0d3ff6218a3ab259adbb8dc9282f.webp" />
        <meta property="og:release_date" content="2025-05-01T09:05:02" />
    <meta property="og:updated_time" content="2025-05-01T09:05:02" />
        <meta property="og:description" content="使用python的trino包执行insert overwrite，但是overwrite却没有生效的问题 根据trino的官网介绍的insert overwrite的开启方式，开启hive的inse" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Python trino执行hive insert overwrite不生效的问题">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <link rel="stylesheet" type="text/css" href="/assets/website/css/vlessnode/vendor.css">
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/Swiper/9.4.1/swiper-bundle.min.css" />
    <link href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.0-alpha3/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/vlessnode/style.css">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Jost&family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    <!-- script ================================================== -->
    <script src="/assets/website/js/frontend/vlessnode/modernizr.js"></script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-JHH6Q1EE0W"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JHH6Q1EE0W');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Navigation Section Starts -->
    <section id="navigation-bar" class="navigation position-fixed">
        <nav id="navbar-example2" class="navbar navbar-expand-lg ">
            <div class="navigation container-fluid d-flex flex-wrap align-items-center my-2 pe-4 ps-5 ">
                <div class="col-md-3 brand-logo">
                    <a href="/" class="d-inline-flex link-body-emphasis">
                                        <span>Vless Node</span>
                                        </a>
                </div>
                <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar2" aria-controls="offcanvasNavbar2" aria-label="Toggle navigation">
                    <ion-icon name="menu-outline"></ion-icon>
                </button>
                <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasNavbar2" aria-labelledby="offcanvasNavbar2Label">
                    <div class="offcanvas-header">
                        <h5 class="offcanvas-title" id="offcanvasNavbar2Label">Menu</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                    </div>
                    <div class="offcanvas-body">
                        <ul class="navbar-nav align-items-center flex-grow-1">
                                                        <li class="nav-list mx-3">
                                <a href="/" class="nav-link px-2">
                                    <h5> 首页 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/free-nodes/" class="nav-link px-2">
                                    <h5> 免费节点 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/paid-subscribe/" class="nav-link px-2">
                                    <h5> 推荐机场 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/client.htm" class="nav-link px-2">
                                    <h5> 客户端 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/news/" class="nav-link px-2">
                                    <h5> 新闻资讯 </h5>
                                </a>
                            </li>
                                                    </ul>
                    </div>
                </div>
            </div>
        </nav>
    </section>
    <!-- Hero Section Starts -->
    <section id="hero">
        <div id="resources" class="hero container py-5 my-5">
            <div class="row flex-lg-row-reverse align-items-center g-5 py-5">
                <div class="col-10 col-sm-8 col-lg-6">
                </div>
                <div class="col-lg-6">
                    <div class="breadcrumb ">
                        <span class="item">
                            <a href="/">
                                <h5> <u>首页</u> </h5>
                            </a>
                        </span>
                        &nbsp;<h5>/</h5> &nbsp; 
                        <span class="item">
                            <a href="/news/">
                                <h5> <u>新闻资讯</u> </h5>
                            </a>
                        </span>
                        &nbsp;<h5>/</h5> &nbsp; 

                        <span class="item">
                            <h5>正文</h5>
                        </span>
                    </div>
                    <h1 class=" lh-1 mb-3">Python trino执行hive insert overwrite不生效的问题</h1>
                </div>
            </div>
        </div>
    </section>
    <!-- Feature Section Starts -->
    <section id="features">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>使用python的trino包执行insert overwrite，但是overwrite却没有生效的问题</p> <p>根据trino的官网介绍的insert overwrite的开启方式，开启hive的insert overwrite会话，使当前会话的insert into语句支持insert overwrite，也即支持插入数据根据分区覆盖更新的功能</p> <p>但是在使用Python代码执行时总是没有生效，在花了不少时间debug之后，终于找到了原因竟是因为开启insert overwrite session的语句没有执行fetchall()而导致没有生效</p> <p>下面是执行的的代码示例</p> <pre><code class="prism language-py"><span class="token keyword">import</span> trino  <span class="token keyword">def</span> <span class="token function">insert_overwrite_query</span><span class="token punctuation">(</span>trino<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     conn <span class="token operator">=</span> trino<span class="token punctuation">.</span>dbapi<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">)</span>     cursor<span class="token punctuation">:</span> Cursor <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>     overwrite_sql <span class="token operator">=</span> <span class="token string">"SET SESSION hive.insert_existing_partitions_behavior = 'OVERWRITE'"</span>     cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>overwrite_sql<span class="token punctuation">)</span>     query <span class="token operator">=</span> <span class="token triple-quoted-string string">"""insert into hive.schema.table ..."""</span>     cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>query<span class="token punctuation">)</span>    	res <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>    	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> </code></pre> <p><code>overwrite_sql</code>在执行之后需要执行<code>cursor.fetchall()</code>才会生效，在此之前实在不明白这条sql为什么需要fetchall()？fetchall()的作用不是在需要返回数据时才执行吗？</p> <p>在一番搜寻之后才了解到fetchall()的真正运作机制</p> <ul> <li>通常查询的结果集会存储在内存之中，好的数据库连接处理一般会将查询结果集存放在服务端的内存，在接收请求时才会返回给客户端，也就是说只有在执行fetchall()之后前面的insert overwrite session也会确切地被执行</li> </ul> <p>另外就是python trino中的fetchall()的作用了，一番源码观察之后，确定了trino的查询机制</p> <ul> <li>查询是分批次查询的，数据量大的数据会首先使用post请求查询一批数据，然后接下来如果客户端还需要剩余的结果，会使用get请求查询接下来的所有数据之后结束或者连接中断</li> </ul> <p>根据cursor.fetchall() 找到了其数据实际上来自于一个生成器对象<code>TrinoResult</code>，在fetchall()的时候实际上执行了<code>list(TrinoResult(...))</code>取得了查询结果（实际上你执行<code>list(cursor.execute(query))</code>也会得到fetchall()相同的结果）</p> <pre><code class="prism language-py"><span class="token keyword">class</span> <span class="token class-name">TrinoResult</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> query<span class="token punctuation">,</span> rows<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> experimental_python_types<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         self<span class="token punctuation">.</span>_query <span class="token operator">=</span> query         self<span class="token punctuation">.</span>_rows <span class="token operator">=</span> rows <span class="token keyword">or</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>         self<span class="token punctuation">.</span>_rownumber <span class="token operator">=</span> <span class="token number">0</span>         self<span class="token punctuation">.</span>_experimental_python_types <span class="token operator">=</span> experimental_python_types 	 	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 	     <span class="token keyword">def</span> <span class="token function">__iter__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token comment"># Initial fetch from the first POST request</span>         <span class="token keyword">for</span> row <span class="token keyword">in</span> self<span class="token punctuation">.</span>_rows<span class="token punctuation">:</span>             self<span class="token punctuation">.</span>_rownumber <span class="token operator">+=</span> <span class="token number">1</span>             <span class="token keyword">yield</span> row         self<span class="token punctuation">.</span>_rows <span class="token operator">=</span> <span class="token boolean">None</span>          <span class="token comment"># Subsequent fetches from GET requests until next_uri is empty.</span>         <span class="token keyword">while</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>_query<span class="token punctuation">.</span>finished<span class="token punctuation">:</span>             rows <span class="token operator">=</span> self<span class="token punctuation">.</span>_query<span class="token punctuation">.</span>fetch<span class="token punctuation">(</span><span class="token punctuation">)</span>             <span class="token keyword">for</span> row <span class="token keyword">in</span> rows<span class="token punctuation">:</span>                 self<span class="token punctuation">.</span>_rownumber <span class="token operator">+=</span> <span class="token number">1</span>                 logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">"row %s"</span><span class="token punctuation">,</span> row<span class="token punctuation">)</span>                 <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>_experimental_python_types<span class="token punctuation">:</span>                     <span class="token keyword">yield</span> row                 <span class="token keyword">else</span><span class="token punctuation">:</span>                     <span class="token keyword">yield</span> self<span class="token punctuation">.</span>_map_to_python_types<span class="token punctuation">(</span>row<span class="token punctuation">,</span> self<span class="token punctuation">.</span>_query<span class="token punctuation">.</span>columns<span class="token punctuation">)</span> </code></pre> <p>总之，在session sql后面需要在执行一次fetchall()才会使开启session的sql生效，但是总觉得有点不符合直觉</p> </p></div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-108466.htm">鸵鸟蛋贵不贵(鸵鸟蛋有什么价值)</a></p>
                                        <p>下一个：<a href="/news/article-109297.htm">被猫咬了怎样判断用不用打狂犬疫苗（被猫咬了怎样判断用不用打狂犬疫苗了）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-93041.htm" title="领养宠物的软件有哪些 领养宠物的软件有哪些免费">领养宠物的软件有哪些 领养宠物的软件有哪些免费</a></li>
                        <li class="py-2"><a href="/news/article-105131.htm" title="echart整体图形大小调整">echart整体图形大小调整</a></li>
                        <li class="py-2"><a href="/news/article-86439.htm" title="三国杀替换装备算不算失去（三国杀换装备的武将）">三国杀替换装备算不算失去（三国杀换装备的武将）</a></li>
                        <li class="py-2"><a href="/news/article-89325.htm" title="宠物24小时医院住院要多少钱（宠物医院住一晚多少钱）">宠物24小时医院住院要多少钱（宠物医院住一晚多少钱）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-27-vless-node.htm" title="「4月27日」每天更新|20.5M/S，2025年Vless免费机场订阅节点链接">「4月27日」每天更新|20.5M/S，2025年Vless免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-5-1-node-share.htm" title="「5月1日」每天更新|23M/S，2025年Vless免费机场订阅节点链接">「5月1日」每天更新|23M/S，2025年Vless免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-5-3-free-node-subscribe.htm" title="「5月3日」每天更新|18.6M/S，2025年Vless免费机场订阅节点链接">「5月3日」每天更新|18.6M/S，2025年Vless免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-96796.htm" title="JavaScript查找数组中的第一个冗余元素方法详解">JavaScript查找数组中的第一个冗余元素方法详解</a></li>
                        <li class="py-2"><a href="/news/article-98941.htm" title="什么可以寄宠物狗（什么快递可以寄宠物狗）">什么可以寄宠物狗（什么快递可以寄宠物狗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-7-vless-node-github.htm" title="「4月7日」每天更新|22.8M/S，2025年Vless免费机场订阅节点链接">「4月7日」每天更新|22.8M/S，2025年Vless免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">9</span> <a href="/date/2025-05/" title="2025-05 归档">2025-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <section class="footer-2">
        <footer class="container footer-2-container  d-flex align-items-center">
            <div class="col-md-4 d-flex justify-content-center justify-content-md-start">
                <p class="footer2-paragraph">© All rights reserved.</p>
            </div>
            <div class="col-md-4 text-center">
                <a href="#" class="text-decoration-none">
                    <iconify-icon class="footer-2-icon px-2" icon="ri:facebook-fill"></iconify-icon>
                </a>
                <a href="#" class="text-decoration-none">
                    <iconify-icon class="footer-2-icon px-2" icon="ri:twitter-fill"></iconify-icon>
                </a>
                <a href="#" class="text-decoration-none">
                    <iconify-icon class="footer-2-icon px-2" icon="ri:instagram-fill"></iconify-icon>
                </a>
            </div>
            <div class="col-md-4">
                <p class="footer2-paragraph d-flex justify-content-center justify-content-md-end">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    Vless Node机场订阅官网 版权所有 Powered by WordPress
                </p>
            </div>
        </footer>
    </section>
    <!-- Scripts  Starts -->
    <script src="/assets/website/js/frontend/vlessnode/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/vlessnode/plugins.js"></script>
    <script src="/assets/website/js/frontend/vlessnode/script.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/Swiper/9.4.1/swiper-bundle.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.0-alpha3/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/iconify-icon@1.0.7/dist/iconify-icon.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>
<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vlessnode.github.io/news/article-43236.htm" />
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>线程安全问题的解决方案有哪些？</title>
        <meta name="description" content="线程安全是指某个方法或某段代码，在多线程中能够正确的执行，不会出现数据不一致或数据污染的情况，我们把这样的程序称之为线程安全的，反之则为非线程安全的。在 Java 中，解决线程安全问题有以下 3 种手" />
        <link rel="icon" href="/assets/website/img/vlessnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Vless Node机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vlessnode.github.io/news/article-43236.htm" />
    <meta property="og:site_name" content="Vless Node机场订阅官网" />
    <meta property="og:title" content="线程安全问题的解决方案有哪些？" />
    <meta property="og:image" content="https://vlessnode.github.io/uploads/20240826/fb7bcec0c034fe01b33aa6430009136e.webp" />
        <meta property="og:release_date" content="2025-01-19T07:11:28" />
    <meta property="og:updated_time" content="2025-01-19T07:11:28" />
        <meta property="og:description" content="线程安全是指某个方法或某段代码，在多线程中能够正确的执行，不会出现数据不一致或数据污染的情况，我们把这样的程序称之为线程安全的，反之则为非线程安全的。在 Java 中，解决线程安全问题有以下 3 种手" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="线程安全问题的解决方案有哪些？">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <link rel="stylesheet" type="text/css" href="/assets/website/css/vlessnode/vendor.css">
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/Swiper/9.4.1/swiper-bundle.min.css" />
    <link href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.0-alpha3/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/vlessnode/style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Jost&family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    <!-- script ================================================== -->
    <script src="/assets/website/js/frontend/vlessnode/modernizr.js"></script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-JHH6Q1EE0W"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JHH6Q1EE0W');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Navigation Section Starts -->
    <section id="navigation-bar" class="navigation position-fixed">
        <nav id="navbar-example2" class="navbar navbar-expand-lg ">
            <div class="navigation container-fluid d-flex flex-wrap align-items-center my-2 pe-4 ps-5 ">
                <div class="col-md-3 brand-logo">
                                        <a href="/" class="d-inline-flex link-body-emphasis">
                        <span>Vless Node</span>
                    </a>
                                    </div>
                <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar2" aria-controls="offcanvasNavbar2" aria-label="Toggle navigation">
                    <ion-icon name="menu-outline"></ion-icon>
                </button>
                <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasNavbar2" aria-labelledby="offcanvasNavbar2Label">
                    <div class="offcanvas-header">
                        <h5 class="offcanvas-title" id="offcanvasNavbar2Label">Menu</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                    </div>
                    <div class="offcanvas-body">
                        <ul class="navbar-nav align-items-center flex-grow-1">
                                                        <li class="nav-list mx-3">
                                <a href="/" class="nav-link px-2">
                                    <h5> 首页 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/free-nodes/" class="nav-link px-2">
                                    <h5> 免费节点 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/paid-subscribe/" class="nav-link px-2">
                                    <h5> 推荐机场 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/news/" class="nav-link px-2">
                                    <h5> 新闻资讯 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="#" class="nav-link px-2">
                                    <h5> 关于 </h5>
                                </a>
                            </li>
                            <li class="nav-list mx-3">
                                <a href="#" class="nav-link px-2">
                                    <h5> 联系 </h5>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </nav>
    </section>
    <!-- Hero Section Starts -->
    <section id="hero">
        <div id="resources" class="hero container py-5 my-5">
            <div class="row flex-lg-row-reverse align-items-center g-5 py-5">
                <div class="col-10 col-sm-8 col-lg-6">
                </div>
                <div class="col-lg-6">
                    <div class="breadcrumb ">
                        <span class="item">
                            <a href="/">
                                <h5> <u>首页</u> </h5>
                            </a>
                        </span>
                        &nbsp;<h5>/</h5> &nbsp; 
                        <span class="item">
                            <a href="/news/">
                                <h5> <u>新闻资讯</u> </h5>
                            </a>
                        </span>
                        &nbsp;<h5>/</h5> &nbsp; 

                        <span class="item">
                            <h5>正文</h5>
                        </span>
                    </div>
                    <h1 class=" lh-1 mb-3">线程安全问题的解决方案有哪些？</h1>
                </div>
            </div>
        </div>
    </section>
    <!-- Feature Section Starts -->
    <section id="features">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<p>线程安全是指某个方法或某段代码，在多线程中能够正确的执行，不会出现数据不一致或数据污染的情况，我们把这样的程序称之为线程安全的，反之则为非线程安全的。在 Java 中，解决线程安全问题有以下 3 种手段：</p> <ol> <li>使用线程安全类，比如 AtomicInteger。</li> <li>加锁排队执行 <ol> <li>使用 synchronized 加锁。</li> <li>使用 ReentrantLock 加锁。</li> </ol> </li> <li>使用线程本地变量 ThreadLocal。</li> </ol> <p>接下来我们逐个来看它们的实现。</p> <h2 id="线程安全问题演示">线程安全问题演示</h2> <p>我们创建一个变量 number 等于 0，之后创建线程 1，执行 100 万次 ++ 操作，同时再创建线程 2 执行 100 万次 -- 操作，等线程 1 和线程 2 都执行完之后，打印 number 变量的值，如果打印的结果为 0，则说明是线程安全的，否则则为非线程安全的，示例代码如下：</p> <pre><code class="language-java">public class ThreadSafeTest {     // 全局变量     private static int number = 0;     // 循环次数(100W)     private static final int COUNT = 1_000_000;      public static void main(String[] args) throws InterruptedException {         // 线程1：执行 100W 次 ++ 操作         Thread t1 = new Thread(() -&gt; {             for (int i = 0; i &lt; COUNT; i++) {                 number++;             }         });         t1.start();          // 线程2：执行 100W 次 -- 操作         Thread t2 = new Thread(() -&gt; {             for (int i = 0; i &lt; COUNT; i++) {                 number--;             }         });         t2.start();          // 等待线程 1 和线程 2，执行完，打印 number 最终的结果         t1.join();         t2.join();         System.out.println("number 最终结果：" + number);     } }</code></pre> <p> 从上述执行结果可以看出，number 变量最终的结果并不是 0，和预期的正确结果不相符，这就是多线程中的线程安全问题。</p> <h2 id="解决线程安全问题">解决线程安全问题</h2> <h3 id="1原子类atomicinteger">1.原子类AtomicInteger</h3> <p>AtomicInteger 是线程安全的类，使用它可以将 ++ 操作和 -- 操作，变成一个原子性操作，这样就能解决非线程安全的问题了，如下代码所示：</p> <pre><code class="language-java">import java.util.concurrent.atomic.AtomicInteger;  public class AtomicIntegerExample {     // 创建 AtomicInteger     private static AtomicInteger number = new AtomicInteger(0);     // 循环次数     private static final int COUNT = 1_000_000;      public static void main(String[] args) throws InterruptedException {         // 线程1：执行 100W 次 ++ 操作         Thread t1 = new Thread(() -&gt; {             for (int i = 0; i &lt; COUNT; i++) {                 // ++ 操作                 number.incrementAndGet();             }         });         t1.start();          // 线程2：执行 100W 次 -- 操作         Thread t2 = new Thread(() -&gt; {             for (int i = 0; i &lt; COUNT; i++) {                 // -- 操作                 number.decrementAndGet();             }         });         t2.start();          // 等待线程 1 和线程 2，执行完，打印 number 最终的结果         t1.join();         t2.join();         System.out.println("最终结果：" + number.get());     } }</code></pre> <p></p> <h3 id="2加锁排队执行">2.加锁排队执行</h3> <p>Java 中有两种锁：synchronized 同步锁和 ReentrantLock 可重入锁。</p> <h4 id="21-同步锁synchronized">2.1 同步锁synchronized</h4> <p>synchronized 是 JVM 层面实现的自动加锁和自动释放锁的同步锁，它的实现代码如下：</p> <pre><code class="language-java">public class SynchronizedExample {     // 全局变量     private static int number = 0;     // 循环次数(100W)     private static final int COUNT = 1_000_000;      public static void main(String[] args) throws InterruptedException {         // 线程1：执行 100W 次 ++ 操作         Thread t1 = new Thread(() -&gt; {             for (int i = 0; i &lt; COUNT; i++) {                 // 加锁排队执行                 synchronized (SynchronizedExample.class) {                     number++;                 }             }         });         t1.start();          // 线程2：执行 100W 次 -- 操作         Thread t2 = new Thread(() -&gt; {             for (int i = 0; i &lt; COUNT; i++) {                 // 加锁排队执行                 synchronized (SynchronizedExample.class) {                     number--;                 }             }         });         t2.start();          // 等待线程 1 和线程 2，执行完，打印 number 最终的结果         t1.join();         t2.join();         System.out.println("number 最终结果：" + number);     } }</code></pre> <p></p> <h4 id="22-可重入锁reentrantlock">2.2 可重入锁ReentrantLock</h4> <p>ReentrantLock 可重入锁需要程序员自己加锁和释放锁，它的实现代码如下：</p> <pre><code class="language-java">import java.util.concurrent.locks.ReentrantLock;  /**  * 使用 ReentrantLock 解决非线程安全问题  */ public class ReentrantLockExample {     // 全局变量     private static int number = 0;     // 循环次数(100W)     private static final int COUNT = 1_000_000;     // 创建 ReentrantLock     private static ReentrantLock lock = new ReentrantLock();      public static void main(String[] args) throws InterruptedException {         // 线程1：执行 100W 次 ++ 操作         Thread t1 = new Thread(() -&gt; {             for (int i = 0; i &lt; COUNT; i++) {                 lock.lock();    // 手动加锁                 number++;       // ++ 操作                 lock.unlock();  // 手动释放锁             }         });         t1.start();          // 线程2：执行 100W 次 -- 操作         Thread t2 = new Thread(() -&gt; {             for (int i = 0; i &lt; COUNT; i++) {                 lock.lock();    // 手动加锁                 number--;       // -- 操作                 lock.unlock();  // 手动释放锁             }         });         t2.start();          // 等待线程 1 和线程 2，执行完，打印 number 最终的结果         t1.join();         t2.join();         System.out.println("number 最终结果：" + number);     } }</code></pre> <p></p> <h3 id="3线程本地变量threadlocal">3.线程本地变量ThreadLocal</h3> <p>使用 ThreadLocal 线程本地变量也可以解决线程安全问题，它是给每个线程独自创建了一份属于自己的私有变量，不同的线程操作的是不同的变量，所以也不会存在非线程安全的问题，它的实现代码如下：</p> <pre><code class="language-java">public class ThreadSafeExample {     // 创建 ThreadLocal（设置每个线程中的初始值为 0）     private static ThreadLocal&lt;Integer&gt; threadLocal = ThreadLocal.withInitial(() -&gt; 0);     // 全局变量     private static int number = 0;     // 循环次数(100W)     private static final int COUNT = 1_000_000;      public static void main(String[] args) throws InterruptedException {         // 线程1：执行 100W 次 ++ 操作         Thread t1 = new Thread(() -&gt; {             try {                 for (int i = 0; i &lt; COUNT; i++) {                     // ++ 操作                     threadLocal.set(threadLocal.get() + 1);                 }                 // 将 ThreadLocal 中的值进行累加                 number += threadLocal.get();             } finally {                 threadLocal.remove(); // 清除资源，防止内存溢出             }         });         t1.start();          // 线程2：执行 100W 次 -- 操作         Thread t2 = new Thread(() -&gt; {             try {                 for (int i = 0; i &lt; COUNT; i++) {                     // -- 操作                     threadLocal.set(threadLocal.get() - 1);                 }                 // 将 ThreadLocal 中的值进行累加                 number += threadLocal.get();             } finally {                 threadLocal.remove(); // 清除资源，防止内存溢出             }         });         t2.start();          // 等待线程 1 和线程 2，执行完，打印 number 最终的结果         t1.join();         t2.join();         System.out.println("最终结果：" + number);     } }</code></pre> <p></p> <h2 id="总结">总结</h2> <p>在 Java 中，解决线程安全问题的手段有 3 种：1.使用线程安全的类，如 AtomicInteger 类；2.使用锁 synchronized 或 ReentrantLock 加锁排队执行；3.使用线程本地变量 ThreadLocal 来处理。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-43235.htm">Django项目引入NPM和gulp管理前端资源</a></p>
                                        <p>下一个：<a href="/news/article-43732.htm">宠物猫疫苗是什么疫苗类型（宠物猫疫苗是什么疫苗类型的）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-36143.htm" title="Mysql中经常用来存储日期的数据类型详解">Mysql中经常用来存储日期的数据类型详解</a></li>
                        <li class="py-2"><a href="/news/article-39270.htm" title="开宠物店挣钱么现在（开宠物店赚钱么）">开宠物店挣钱么现在（开宠物店赚钱么）</a></li>
                        <li class="py-2"><a href="/news/article-22241.htm" title="宠物绝育套餐模板（宠物绝育活动海报）">宠物绝育套餐模板（宠物绝育活动海报）</a></li>
                        <li class="py-2"><a href="/news/article-26383.htm" title="穷人养什么猫合适（穷人养什么宠物好）">穷人养什么猫合适（穷人养什么宠物好）</a></li>
                        <li class="py-2"><a href="/news/article-24076.htm" title="数据库基础知识详解五：MySQL中的索引和其两种引擎、主从复制以及关系型/非关系型数据库">数据库基础知识详解五：MySQL中的索引和其两种引擎、主从复制以及关系型/非关系型数据库</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-25-node-share-links.htm" title="「12月25日」最高速度21.8M/S，2024年Vless每天更新免费机场订阅节点链接">「12月25日」最高速度21.8M/S，2024年Vless每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-23156.htm" title="k8s入门之Ingress">k8s入门之Ingress</a></li>
                        <li class="py-2"><a href="/news/article-48503.htm" title="maven项目打包成war包并部署到tomcat上">maven项目打包成war包并部署到tomcat上</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-10-vless-github.htm" title="「1月10日」每天更新|21.8M/S，2025年Vless免费机场订阅节点链接">「1月10日」每天更新|21.8M/S，2025年Vless免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-12-free-node-subscribe-links.htm" title="「11月12日」最高速度19.5M/S，2024年Vless每天更新免费机场订阅节点链接">「11月12日」最高速度19.5M/S，2024年Vless每天更新免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <section class="footer-2">
        <footer class="container footer-2-container  d-flex align-items-center">
            <div class="col-md-4 d-flex justify-content-center justify-content-md-start">
                <p class="footer2-paragraph">© All rights reserved.</p>
            </div>
            <div class="col-md-4 text-center">
                <a href="#" class="text-decoration-none">
                    <iconify-icon class="footer-2-icon px-2" icon="ri:facebook-fill"></iconify-icon>
                </a>
                <a href="#" class="text-decoration-none">
                    <iconify-icon class="footer-2-icon px-2" icon="ri:twitter-fill"></iconify-icon>
                </a>
                <a href="#" class="text-decoration-none">
                    <iconify-icon class="footer-2-icon px-2" icon="ri:instagram-fill"></iconify-icon>
                </a>
            </div>
            <div class="col-md-4">
                <p class="footer2-paragraph d-flex justify-content-center justify-content-md-end">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    Vless Node机场订阅官网 版权所有 Powered by WordPress
                </p>
            </div>
        </footer>
    </section>
    <!-- Scripts  Starts -->
    <script src="/assets/website/js/frontend/vlessnode/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/vlessnode/plugins.js"></script>
    <script src="/assets/website/js/frontend/vlessnode/script.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/Swiper/9.4.1/swiper-bundle.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.0-alpha3/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/iconify-icon@1.0.7/dist/iconify-icon.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>
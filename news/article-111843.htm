<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vlessnode.github.io/news/article-111843.htm" />
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ASP.NET Core使用EF创建模型(索引、备用键、继承、支持字段)_实用技巧</title>
        <meta name="description" content="4.3.1控制何时使用字段  4.3.2没有属性的字段 目录  			  目录  1.索引  1.1约定 1.2数据批注 1.3Fluent API  2.备用键  2.1约定 2.2数据注释 2.3" />
        <link rel="icon" href="/assets/website/img/vlessnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Vless Node机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vlessnode.github.io/news/article-111843.htm" />
    <meta property="og:site_name" content="Vless Node机场订阅官网" />
    <meta property="og:title" content="ASP.NET Core使用EF创建模型(索引、备用键、继承、支持字段)_实用技巧" />
    <meta property="og:image" content="https://vlessnode.github.io/uploads/20240826/e930fd191b72b37c11904855b4802131.webp" />
        <meta property="og:release_date" content="2025-05-04T09:30:04" />
    <meta property="og:updated_time" content="2025-05-04T09:30:04" />
        <meta property="og:description" content="4.3.1控制何时使用字段  4.3.2没有属性的字段 目录  			  目录  1.索引  1.1约定 1.2数据批注 1.3Fluent API  2.备用键  2.1约定 2.2数据注释 2.3" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="ASP.NET Core使用EF创建模型(索引、备用键、继承、支持字段)_实用技巧">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <link rel="stylesheet" type="text/css" href="/assets/website/css/vlessnode/vendor.css">
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/Swiper/9.4.1/swiper-bundle.min.css" />
    <link href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.0-alpha3/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/vlessnode/style.css">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Jost&family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    <!-- script ================================================== -->
    <script src="/assets/website/js/frontend/vlessnode/modernizr.js"></script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-JHH6Q1EE0W"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JHH6Q1EE0W');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Navigation Section Starts -->
    <section id="navigation-bar" class="navigation position-fixed">
        <nav id="navbar-example2" class="navbar navbar-expand-lg ">
            <div class="navigation container-fluid d-flex flex-wrap align-items-center my-2 pe-4 ps-5 ">
                <div class="col-md-3 brand-logo">
                    <a href="/" class="d-inline-flex link-body-emphasis">
                                        <span>Vless Node</span>
                                        </a>
                </div>
                <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar2" aria-controls="offcanvasNavbar2" aria-label="Toggle navigation">
                    <ion-icon name="menu-outline"></ion-icon>
                </button>
                <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasNavbar2" aria-labelledby="offcanvasNavbar2Label">
                    <div class="offcanvas-header">
                        <h5 class="offcanvas-title" id="offcanvasNavbar2Label">Menu</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                    </div>
                    <div class="offcanvas-body">
                        <ul class="navbar-nav align-items-center flex-grow-1">
                                                        <li class="nav-list mx-3">
                                <a href="/" class="nav-link px-2">
                                    <h5> 首页 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/free-nodes/" class="nav-link px-2">
                                    <h5> 免费节点 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/paid-subscribe/" class="nav-link px-2">
                                    <h5> 推荐机场 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/client.htm" class="nav-link px-2">
                                    <h5> 客户端 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/news/" class="nav-link px-2">
                                    <h5> 新闻资讯 </h5>
                                </a>
                            </li>
                                                    </ul>
                    </div>
                </div>
            </div>
        </nav>
    </section>
    <!-- Hero Section Starts -->
    <section id="hero">
        <div id="resources" class="hero container py-5 my-5">
            <div class="row flex-lg-row-reverse align-items-center g-5 py-5">
                <div class="col-10 col-sm-8 col-lg-6">
                </div>
                <div class="col-lg-6">
                    <div class="breadcrumb ">
                        <span class="item">
                            <a href="/">
                                <h5> <u>首页</u> </h5>
                            </a>
                        </span>
                        &nbsp;<h5>/</h5> &nbsp; 
                        <span class="item">
                            <a href="/news/">
                                <h5> <u>新闻资讯</u> </h5>
                            </a>
                        </span>
                        &nbsp;<h5>/</h5> &nbsp; 

                        <span class="item">
                            <h5>正文</h5>
                        </span>
                    </div>
                    <h1 class=" lh-1 mb-3">ASP.NET Core使用EF创建模型(索引、备用键、继承、支持字段)_实用技巧</h1>
                </div>
            </div>
        </div>
    </section>
    <!-- Feature Section Starts -->
    <section id="features">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				  			 <div id="log-box">  				<div id="catalog"><ul id="catalog-ul"> <li><i class="be be-arrowright"></i> 4.3.1控制何时使用字段</li> <li><i class="be be-arrowright"></i> 4.3.2没有属性的字段</li> </ul><span class="log-zd"><span class="log-close"><i class="be be-cross"></i><strong>目录</strong></span></span></div>  			</div> <div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li>1.索引</li> <ul class="second_class_ul"> <li>1.1约定</li> <li>1.2数据批注</li> <li>1.3Fluent API</li> </ul> <li>2.备用键</li> <ul class="second_class_ul"> <li>2.1约定</li> <li>2.2数据注释</li> <li>2.3Fluent API</li> </ul> <li>3.继承</li> <ul class="second_class_ul"> <li>3.1约定</li> </ul> <li>4.支持字段</li> <ul class="second_class_ul"> <li>4.1约定</li> <li>4.2数据注释</li> <li>4.3Fluent API</li> <ul class="third_class_ul"> <li>4.3.1控制何时使用字段</li> <li>4.3.2没有属性的字段</li> </ul> </ul> </ul> </div> <p class="maodian"></p> <h2>1.索引</h2> <p>索引是跨多个数据存储区的常见概念。尽管它们在数据存储中的实现可能会有所不同，但也可用于基于列（或一组列）更高效地进行查找。</p> <p class="maodian"></p> <h3>1.1约定</h3> <p>按照约定，将在用作外键的每个属性（或一组属性）中创建索引。</p> <p class="maodian"></p> <h3>1.2数据批注</h3> <p>不能使用数据批注创建索引。</p> <p class="maodian"></p> <h3>1.3Fluent API</h3> <p>您可以使用熟知的API来指定单个属性的索引。默认情况下，索引不是唯一的。</p> <div class="ay1code"> <pre class="brush:csharp;">class MyContext : DbContext  {      public DbSet&lt;Blog&gt; Blogs { get; set; }      protected override void OnModelCreating(ModelBuilder modelBuilder)      {          modelBuilder.Entity&lt;Blog&gt;()              //配置索引              .HasIndex(b =&gt; b.Url);      }  }  public class Blog  {      public int BlogId { get; set; }      public string Url { get; set; }  }</pre> </div> <p>您还可以指定索引应是唯一的，这意味着对于给定的属性，不能有两个实体具有相同的值。</p> <div class="ay1code"> <pre class="brush:csharp;">modelBuilder.Entity&lt;Blog&gt;()  .HasIndex(b =&gt; b.Url)  .IsUnique();</pre> </div> <p>您还可以为多个列指定索引。</p> <div class="ay1code"> <pre class="brush:csharp;">class MyContext : DbContext  {      public DbSet&lt;Person&gt; People { get; set; }      protected override void OnModelCreating(ModelBuilder modelBuilder)      {          modelBuilder.Entity&lt;Person&gt;()              .HasIndex(p =&gt; new { p.FirstName, p.LastName });      }  }  public class Person  {      public int PersonId { get; set; }      public string FirstName { get; set; }      public string LastName { get; set; }  }</pre> </div> <p class="maodian"></p> <h2>2.备用键</h2> <p>备用键与主键相对，用作每个实体实例的备用唯一标识符。备用键可用作关系的目标。使用关系数据库时，这将映射到备用键列上的唯一索引/约束和引用列的一个或多个外键约束的概念。系统通常会在需要时为你引入备用键，你无需手动配置它们。</p> <p class="maodian"></p> <h3>2.1约定</h3> <p>按照约定，系统将在识别属性（不是主键）时为你引入备用键，充当关系的目标。</p> <div class="ay1code"> <pre class="brush:csharp;">class MyContext : DbContext  {      public DbSet&lt;Blog&gt; Blogs { get; set; }      public DbSet&lt;Post&gt; Posts { get; set; }      protected override void OnModelCreating(ModelBuilder modelBuilder)      {          modelBuilder.Entity&lt;Post&gt;()              .HasOne(p =&gt; p.Blog)              .WithMany(b =&gt; b.Posts)              .HasForeignKey(p =&gt; p.BlogUrl)              .HasPrincipalKey(b =&gt; b.Url);      }  }  public class Blog  {      public int BlogId { get; set; }      public string Url { get; set; }            public List&lt;Post&gt; Posts { get; set; }  }  public class Post  {      public int PostId { get; set; }      public string Title { get; set; }      public string Content { get; set; }      //备用键      public string BlogUrl { get; set; }      public Blog Blog { get; set; }  }</pre> </div> <p class="maodian"></p> <h3>2.2数据注释</h3> <p>不能使用数据注释配置备用键。</p> <p class="maodian"></p> <h3>2.3Fluent API</h3> <p>你可以使用熟知的API将单个属性配置为备用密钥。</p> <div class="ay1code"> <pre class="brush:csharp;">class MyContext : DbContext  {      public DbSet&lt;Car&gt; Cars { get; set; }        protected override void OnModelCreating(ModelBuilder modelBuilder)      {          modelBuilder.Entity&lt;Car&gt;()              //配置为备用密钥              .HasAlternateKey(c =&gt; c.LicensePlate);      }  }  class Car  {      public int CarId { get; set; }      public string LicensePlate { get; set; }      public string Make { get; set; }      public string Model { get; set; }  }  你还可以使用熟知的API将多个属性配置为备用密钥（称为复合备用键）。  class MyContext : DbContext  {      public DbSet&lt;Car&gt; Cars { get; set; }      protected override void OnModelCreating(ModelBuilder modelBuilder)      {          modelBuilder.Entity&lt;Car&gt;()              //配置为备用密钥              .HasAlternateKey(c =&gt; new { c.State, c.LicensePlate });      }  }  class Car  {      public int CarId { get; set; }      public string State { get; set; }      public string LicensePlate { get; set; }      public string Make { get; set; }      public string Model { get; set; }  }</pre> </div> <p class="maodian"></p> <h2>3.继承</h2> <p>EF模型中的继承用于控制如何在数据库中表示实体类中的继承。</p> <p class="maodian"></p> <h3>3.1约定</h3> <p>按照约定，由数据库提供商确定如何在数据库中表示继承。有关如何使用关系数据库提供程序来处理此情况的详细说明。如果模型中显式包括两个或更多个继承类型，则EF仅会设置继承。EF不会扫描模型中未包含的基类型或派生类型。可以通过为继承层次结构中的每个类型公开DbSet，在模型中包含类型。</p> <div class="ay1code"> <pre class="brush:csharp;">class MyContext : DbContext  {      public DbSet&lt;Blog&gt; Blogs { get; set; }      public DbSet&lt;RssBlog&gt; RssBlogs { get; set; }  }  public class Blog  {      public int BlogId { get; set; }      public string Url { get; set; }  }  public class RssBlog : Blog  {      public string RssUrl { get; set; }  }</pre> </div> <p>如果不想公开层次结构中一个或多个实体的DbSet，可以使用熟知的API来确保它们包含在模型中。如果不依赖约定，则可以使用HasBaseType显式指定基类型。</p> <div class="ay1code"> <pre class="brush:csharp;">class MyContext : DbContext  {      public DbSet&lt;Blog&gt; Blogs { get; set; }      protected override void OnModelCreating(ModelBuilder modelBuilder)      {          modelBuilder.Entity&lt;RssBlog&gt;().HasBaseType&lt;Blog&gt;();      }  }</pre> </div> <p class="maodian"></p> <h2>4.支持字段</h2> <p>支持字段允许EF读取和写入字段，而不是属性。当使用类中的封装来限制或通过应用程序代码对数据访问进行限制时，这可能很有用，但在不使用这些限制的情况下，应从数据库中读取或写入值。</p> <p class="maodian"></p> <h3>4.1约定</h3> <p>按照约定，将发现以下字段作为给定属性的支持字段（按优先级顺序列出）。仅为模型中包含的属性发现字段。</p> <div class="ay1code"> <pre class="brush:csharp;">public class Blog  {      private string _url;      public int BlogId { get; set; }      public string Url      {          get { return _url; }          set { _url = value; }      }  }</pre> </div> <p>配置了支持字段后，当从数据库具体化实体实例（而不是使用属性资源库）时，EF将直接写入该字段。如果EF需要在其他时间读取或写入值，则它将使用属性（如果可能）。例如，如果EF需要更新某个属性的值，则它将使用属性setter（如果已定义）。如果该属性为只读，则它将写入字段。</p> <p class="maodian"></p> <h3>4.2数据注释</h3> <p>不能通过数据批注配置支持字段。</p> <p class="maodian"></p> <h3>4.3Fluent API</h3> <p>你可以使用熟知的API来配置属性的支持字段。</p> <div class="ay1code"> <pre class="brush:csharp;">class MyContext : DbContext  {      public DbSet&lt;Blog&gt; Blogs { get; set; }      protected override void OnModelCreating(ModelBuilder modelBuilder)      {          modelBuilder.Entity&lt;Blog&gt;()              .Property(b =&gt; b.Url)              .HasField("_validatedUrl");      }  }  public class Blog  {      private string _validatedUrl;      public int BlogId { get; set; }      public string Url      {          get { return _validatedUrl; }      }      public void SetUrl(string url)      {          using (var client = new HttpClient())          {              var response = client.GetAsync(url).Result;              response.EnsureSuccessStatusCode();          }          _validatedUrl = url;      }  }</pre> </div> <p class="maodian"></p> <span class="directory"></span><h4 id="title-0">4.3.1控制何时使用字段</h4> <p>可以配置EF何时使用字段或属性。有关支持的选项，请参阅PropertyAccessMode枚举。</p> <div class="ay1code"> <pre class="brush:csharp;">modelBuilder.Entity&lt;Blog&gt;()      .Property(b =&gt; b.Url)      .HasField("_validatedUrl")      .UsePropertyAccessMode(PropertyAccessMode.Field);</pre> </div> <p class="maodian"></p> <span class="directory"></span><h4 id="title-1">4.3.2没有属性的字段</h4> <p>你还可以在你的模型中创建一个概念属性，该属性在实体类中不具有相应的CLR属性，而是使用字段来存储实体中的数据。这不同于阴影属性，其中的数据存储在更改跟踪器中。如果实体类使用方法获取或设置值，通常会使用此方法。可以在Property(...) API中为EF指定字段的名称。如果没有具有给定名称的属性，则EF将查找字段。</p> <div class="ay1code"> <pre class="brush:csharp;">class MyContext : DbContext  {      public DbSet&lt;Blog&gt; Blogs { get; set; }      protected override void OnModelCreating(ModelBuilder modelBuilder)      {          modelBuilder.Entity&lt;Blog&gt;()              .Property("_validatedUrl");      }  }  public class Blog  {      private string _validatedUrl;      public int BlogId { get; set; }      public string GetUrl()      {          return _validatedUrl;      }      public void SetUrl(string url)      {          using (var client = new HttpClient())          {              var response = client.GetAsync(url).Result;              response.EnsureSuccessStatusCode();          }          _validatedUrl = url;      }  }</pre> </div> <p>您还可以选择为属性指定名称，而不是字段名称。然后，在创建模型时使用此名称，最值得注意的是，该名称将用于在数据库中映射到的列名称。</p> <div class="ay1code"> <pre class="brush:csharp;">protected override void OnModelCreating(ModelBuilder modelBuilder)  {      modelBuilder.Entity&lt;Blog&gt;()          .Property&lt;string&gt;("Url")          .HasField("_validatedUrl");  }</pre> </div> <p>如果实体类中没有属性，则可以在LINQ查询中使用EF.Property(...)方法来引用概念上是模型的一部分的属性。</p> <div class="ay1code"> <pre class="brush:csharp;">var blogs = db.blogs.OrderBy(b =&gt; EF.Property&lt;string&gt;(b, "Url"));</pre> </div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-111001.htm">宠物店从哪进货（宠物店从哪进货好）</a></p>
                                        <p>下一个：<a href="/news/article-111847.htm">宠物店寄养协议文字pdf文件（宠物店寄养协议文字pdf文件下载）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-4-15-free-high-speed-nodes.htm" title="「4月15日」每天更新|22.9M/S，2025年Vless免费机场订阅节点链接">「4月15日」每天更新|22.9M/S，2025年Vless免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-92309.htm" title="附近哪有动物医院?（附近动物医院地址）">附近哪有动物医院?（附近动物医院地址）</a></li>
                        <li class="py-2"><a href="/news/article-111000.htm" title="Shell基础Bash基本功能（多命令顺序执行）">Shell基础Bash基本功能（多命令顺序执行）</a></li>
                        <li class="py-2"><a href="/news/article-95312.htm" title="宠物粮在哪里批发好（宠物粮在哪里批发好一点）">宠物粮在哪里批发好（宠物粮在哪里批发好一点）</a></li>
                        <li class="py-2"><a href="/news/article-92306.htm" title="宠颐生动物医院怎么样是正规医院吗（宠颐生官网）">宠颐生动物医院怎么样是正规医院吗（宠颐生官网）</a></li>
                        <li class="py-2"><a href="/news/article-97490.htm" title="vue3中 setup注意点">vue3中 setup注意点</a></li>
                        <li class="py-2"><a href="/news/article-105130.htm" title="微服务架构介绍">微服务架构介绍</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-5-7-free-high-speed-nodes.htm" title="「5月7日」每天更新|18.5M/S，2025年Vless免费机场订阅节点链接">「5月7日」每天更新|18.5M/S，2025年Vless免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-108465.htm" title="宠物领养网站的设计与实现方案（宠物领养网站html模板）">宠物领养网站的设计与实现方案（宠物领养网站html模板）</a></li>
                        <li class="py-2"><a href="/news/article-101143.htm" title="宠物美容师一个月能赚多少钱工资（宠物美容师工作怎么样）">宠物美容师一个月能赚多少钱工资（宠物美容师工作怎么样）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">16</span> <a href="/date/2025-05/" title="2025-05 归档">2025-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <section class="footer-2">
        <footer class="container footer-2-container  d-flex align-items-center">
            <div class="col-md-4 d-flex justify-content-center justify-content-md-start">
                <p class="footer2-paragraph">© All rights reserved.</p>
            </div>
            <div class="col-md-4 text-center">
                <a href="#" class="text-decoration-none">
                    <iconify-icon class="footer-2-icon px-2" icon="ri:facebook-fill"></iconify-icon>
                </a>
                <a href="#" class="text-decoration-none">
                    <iconify-icon class="footer-2-icon px-2" icon="ri:twitter-fill"></iconify-icon>
                </a>
                <a href="#" class="text-decoration-none">
                    <iconify-icon class="footer-2-icon px-2" icon="ri:instagram-fill"></iconify-icon>
                </a>
            </div>
            <div class="col-md-4">
                <p class="footer2-paragraph d-flex justify-content-center justify-content-md-end">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    Vless Node机场订阅官网 版权所有 Powered by WordPress
                </p>
            </div>
        </footer>
    </section>
    <!-- Scripts  Starts -->
    <script src="/assets/website/js/frontend/vlessnode/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/vlessnode/plugins.js"></script>
    <script src="/assets/website/js/frontend/vlessnode/script.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/Swiper/9.4.1/swiper-bundle.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.0-alpha3/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/iconify-icon@1.0.7/dist/iconify-icon.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>
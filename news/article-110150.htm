<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vlessnode.github.io/news/article-110150.htm" />
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>nodejs从异步事件中获取数据方法</title>
        <meta name="description" content="nodejs对异步的实现非常彻底，接触时间不久，写爬虫的时候按照以往的思路将request的结果直接赋值给全局变量，结果发现没有输出，对此很困惑，经过查询发现如下 看下面的片段，输出为空 fs.rea" />
        <link rel="icon" href="/assets/website/img/vlessnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Vless Node机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vlessnode.github.io/news/article-110150.htm" />
    <meta property="og:site_name" content="Vless Node机场订阅官网" />
    <meta property="og:title" content="nodejs从异步事件中获取数据方法" />
    <meta property="og:image" content="https://vlessnode.github.io/uploads/20240826/2668c7dad27528a8b9076ef30035641a.webp" />
        <meta property="og:release_date" content="2025-05-02T09:25:05" />
    <meta property="og:updated_time" content="2025-05-02T09:25:05" />
        <meta property="og:description" content="nodejs对异步的实现非常彻底，接触时间不久，写爬虫的时候按照以往的思路将request的结果直接赋值给全局变量，结果发现没有输出，对此很困惑，经过查询发现如下 看下面的片段，输出为空 fs.rea" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="nodejs从异步事件中获取数据方法">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <link rel="stylesheet" type="text/css" href="/assets/website/css/vlessnode/vendor.css">
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/Swiper/9.4.1/swiper-bundle.min.css" />
    <link href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.0-alpha3/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/vlessnode/style.css">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Jost&family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    <!-- script ================================================== -->
    <script src="/assets/website/js/frontend/vlessnode/modernizr.js"></script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-JHH6Q1EE0W"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JHH6Q1EE0W');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Navigation Section Starts -->
    <section id="navigation-bar" class="navigation position-fixed">
        <nav id="navbar-example2" class="navbar navbar-expand-lg ">
            <div class="navigation container-fluid d-flex flex-wrap align-items-center my-2 pe-4 ps-5 ">
                <div class="col-md-3 brand-logo">
                    <a href="/" class="d-inline-flex link-body-emphasis">
                                        <span>Vless Node</span>
                                        </a>
                </div>
                <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar2" aria-controls="offcanvasNavbar2" aria-label="Toggle navigation">
                    <ion-icon name="menu-outline"></ion-icon>
                </button>
                <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasNavbar2" aria-labelledby="offcanvasNavbar2Label">
                    <div class="offcanvas-header">
                        <h5 class="offcanvas-title" id="offcanvasNavbar2Label">Menu</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                    </div>
                    <div class="offcanvas-body">
                        <ul class="navbar-nav align-items-center flex-grow-1">
                                                        <li class="nav-list mx-3">
                                <a href="/" class="nav-link px-2">
                                    <h5> 首页 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/free-nodes/" class="nav-link px-2">
                                    <h5> 免费节点 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/paid-subscribe/" class="nav-link px-2">
                                    <h5> 推荐机场 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/client.htm" class="nav-link px-2">
                                    <h5> 客户端 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/news/" class="nav-link px-2">
                                    <h5> 新闻资讯 </h5>
                                </a>
                            </li>
                                                    </ul>
                    </div>
                </div>
            </div>
        </nav>
    </section>
    <!-- Hero Section Starts -->
    <section id="hero">
        <div id="resources" class="hero container py-5 my-5">
            <div class="row flex-lg-row-reverse align-items-center g-5 py-5">
                <div class="col-10 col-sm-8 col-lg-6">
                </div>
                <div class="col-lg-6">
                    <div class="breadcrumb ">
                        <span class="item">
                            <a href="/">
                                <h5> <u>首页</u> </h5>
                            </a>
                        </span>
                        &nbsp;<h5>/</h5> &nbsp; 
                        <span class="item">
                            <a href="/news/">
                                <h5> <u>新闻资讯</u> </h5>
                            </a>
                        </span>
                        &nbsp;<h5>/</h5> &nbsp; 

                        <span class="item">
                            <h5>正文</h5>
                        </span>
                    </div>
                    <h1 class=" lh-1 mb-3">nodejs从异步事件中获取数据方法</h1>
                </div>
            </div>
        </div>
    </section>
    <!-- Feature Section Starts -->
    <section id="features">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <p>nodejs对异步的实现非常彻底，接触时间不久，写爬虫的时候按照以往的思路将request的结果直接赋值给全局变量，结果发现没有输出，对此很困惑，经过查询发现如下</p> <p>看下面的片段，输出为空</p> <p><code>fs.readFile</code>是异步读取，log函数输出是<code>getDate()</code>还没有获取到数据</p> <pre><code class="prism language-js"><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token keyword">function</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">'demo.txt'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span><span class="token comment">//异步事件</span><span class="token keyword">return</span> data<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre> <p>再看看promise实现，log函数仍旧没有输出，和回调函数的问题一样</p> <pre><code class="prism language-js"><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token keyword">function</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">"demo.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> result<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>     		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre> <p>所以，要想获取异步逻辑的数据，就只能等待异步函数执行完毕得到数据之后在获取，需要延迟获得自然想到了回调函数</p> <p>全局log仍旧无法输出，意味着同步逻辑没有获得异步数据</p> <pre><code class="prism language-js"><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span> data<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">function</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">"demo.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> result<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>     data<span class="token operator">=</span> result<span class="token punctuation">}</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre> <p>再来看看promise</p> <p>利用回调函数无效</p> <p>直接返回promise，表明该结果在未来才能获取，仍旧需要在同步代码中进行回调，显而易见回调仍旧无效</p> <p>async实际上是promise的封装，结果也相同</p> <pre><code class="prism language-js"><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span> data<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">function</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">"demo.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token function">callback</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>     data<span class="token operator">=</span> result<span class="token punctuation">}</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//返回promise</span> data<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">function</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">"demo.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>data<span class="token operator">=</span>res<span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//或者async</span><span class="token keyword">async</span><span class="token keyword">function</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">"demo.txt"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre> <p>或者以订阅发布模式获取，仍旧无效（按理说是可以的）</p> <pre><code class="prism language-js"><span class="token keyword">var</span> events<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'events'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token keyword">var</span> EventEmitter<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">events<span class="token punctuation">.</span>EventEmitter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> data<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">function</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">'demo.txt'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span> 		EventEmitter<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'sendData'</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> EventEmitter<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'sendData'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>     data<span class="token operator">=</span> res<span class="token punctuation">}</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>以上对nodejs简单的异步代码进行了回顾，可见同步代码和异步代码是两条不同的执行逻辑，之所以同步获取不到异步数据，是由于异步数据的获取时间未知，比起回调函数，强行获取也是不合逻辑的</p> <p>来看看同步方式就完全没有问题</p> <pre><code class="prism language-js"><span class="token keyword">var</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span> data<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">function</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">'demo.txt'</span><span class="token punctuation">)</span><span class="token punctuation">}</span> data<span class="token operator">=</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre> <p>进一步思考，既然同步代码是因为不确定异步数据的时机，还没有获取到就执行完毕了，那让同步代码等待不就行了？</p> <p>然而查找发现nodejs并没有sleep函数的实现，但是可以通过<code>setTimeout</code>进行模拟，将同步逻辑包裹起来</p> <pre><code class="prism language-js"><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span>     data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>但是这…不还是进入了异步执行的逻辑么</p> <p>所以最终结论是同步代码只能通过回调函数，实现同步异步逻辑交替执行的结果</p> <p>最后如果确定异步逻辑获得了数据，如何强行取出？</p> </div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-109297.htm">被猫咬了怎样判断用不用打狂犬疫苗（被猫咬了怎样判断用不用打狂犬疫苗了）</a></p>
                                        <p>下一个：<a href="/news/article-110151.htm">FreeRTOS实时操作系统队列的API函数讲解_操作系统</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-99727.htm" title="一片枫叶一片情是什么歌的歌词啊（一片片枫叶情歌对唱）">一片枫叶一片情是什么歌的歌词啊（一片片枫叶情歌对唱）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-21-free-vless-node.htm" title="「4月21日」每天更新|22.4M/S，2025年Vless免费机场订阅节点链接">「4月21日」每天更新|22.4M/S，2025年Vless免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-10-node-share-links.htm" title="「4月10日」每天更新|19.4M/S，2025年Vless免费机场订阅节点链接">「4月10日」每天更新|19.4M/S，2025年Vless免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-5-1-node-share.htm" title="「5月1日」每天更新|23M/S，2025年Vless免费机场订阅节点链接">「5月1日」每天更新|23M/S，2025年Vless免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-93782.htm" title="linux安装离线docker包教程,Centos7离线安装Docker">linux安装离线docker包教程,Centos7离线安装Docker</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-19-free-subscribe-node.htm" title="「4月19日」每天更新|22.4M/S，2025年Vless免费机场订阅节点链接">「4月19日」每天更新|22.4M/S，2025年Vless免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-110151.htm" title="FreeRTOS实时操作系统队列的API函数讲解_操作系统">FreeRTOS实时操作系统队列的API函数讲解_操作系统</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-29-free-subscribe-node.htm" title="「4月29日」每天更新|18.1M/S，2025年Vless免费机场订阅节点链接">「4月29日」每天更新|18.1M/S，2025年Vless免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-88605.htm" title="动物疫苗属于什么行业类别的（动物疫苗概念的上市公司）">动物疫苗属于什么行业类别的（动物疫苗概念的上市公司）</a></li>
                        <li class="py-2"><a href="/news/article-98269.htm" title="喵咪驱虫怎么做的（猫驱虫使用方法）">喵咪驱虫怎么做的（猫驱虫使用方法）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">9</span> <a href="/date/2025-05/" title="2025-05 归档">2025-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <section class="footer-2">
        <footer class="container footer-2-container  d-flex align-items-center">
            <div class="col-md-4 d-flex justify-content-center justify-content-md-start">
                <p class="footer2-paragraph">© All rights reserved.</p>
            </div>
            <div class="col-md-4 text-center">
                <a href="#" class="text-decoration-none">
                    <iconify-icon class="footer-2-icon px-2" icon="ri:facebook-fill"></iconify-icon>
                </a>
                <a href="#" class="text-decoration-none">
                    <iconify-icon class="footer-2-icon px-2" icon="ri:twitter-fill"></iconify-icon>
                </a>
                <a href="#" class="text-decoration-none">
                    <iconify-icon class="footer-2-icon px-2" icon="ri:instagram-fill"></iconify-icon>
                </a>
            </div>
            <div class="col-md-4">
                <p class="footer2-paragraph d-flex justify-content-center justify-content-md-end">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    Vless Node机场订阅官网 版权所有 Powered by WordPress
                </p>
            </div>
        </footer>
    </section>
    <!-- Scripts  Starts -->
    <script src="/assets/website/js/frontend/vlessnode/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/vlessnode/plugins.js"></script>
    <script src="/assets/website/js/frontend/vlessnode/script.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/Swiper/9.4.1/swiper-bundle.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.0-alpha3/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/iconify-icon@1.0.7/dist/iconify-icon.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>
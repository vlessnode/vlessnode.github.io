<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vlessnode.github.io/news/article-71927.htm" />
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>特殊线性表&#8212;&#8212;&#8212;-栈（1）</title>
        <meta name="description" content="栈是先进后出的特殊线性表，只允许在表的末端进行插入和删除，后面将介绍两种实现栈的方式，分别是基于数组的实现、基于链表的实现。  栈的抽象定义 class Mystack { public: 	Myst" />
        <link rel="icon" href="/assets/website/img/vlessnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Vless Node机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vlessnode.github.io/news/article-71927.htm" />
    <meta property="og:site_name" content="Vless Node机场订阅官网" />
    <meta property="og:title" content="特殊线性表&#8212;&#8212;&#8212;-栈（1）" />
    <meta property="og:image" content="https://vlessnode.github.io/uploads/20240826/2668c7dad27528a8b9076ef30035641a.webp" />
        <meta property="og:release_date" content="2025-03-11T07:48:49" />
    <meta property="og:updated_time" content="2025-03-11T07:48:49" />
        <meta property="og:description" content="栈是先进后出的特殊线性表，只允许在表的末端进行插入和删除，后面将介绍两种实现栈的方式，分别是基于数组的实现、基于链表的实现。  栈的抽象定义 class Mystack { public: 	Myst" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="特殊线性表&#8212;&#8212;&#8212;-栈（1）">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <link rel="stylesheet" type="text/css" href="/assets/website/css/vlessnode/vendor.css">
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/Swiper/9.4.1/swiper-bundle.min.css" />
    <link href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.0-alpha3/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/vlessnode/style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Jost&family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    <!-- script ================================================== -->
    <script src="/assets/website/js/frontend/vlessnode/modernizr.js"></script>
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-JHH6Q1EE0W"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JHH6Q1EE0W');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Navigation Section Starts -->
    <section id="navigation-bar" class="navigation position-fixed">
        <nav id="navbar-example2" class="navbar navbar-expand-lg ">
            <div class="navigation container-fluid d-flex flex-wrap align-items-center my-2 pe-4 ps-5 ">
                <div class="col-md-3 brand-logo">
                    <a href="/" class="d-inline-flex link-body-emphasis">
                                        <span>Vless Node</span>
                                        </a>
                </div>
                <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar2" aria-controls="offcanvasNavbar2" aria-label="Toggle navigation">
                    <ion-icon name="menu-outline"></ion-icon>
                </button>
                <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasNavbar2" aria-labelledby="offcanvasNavbar2Label">
                    <div class="offcanvas-header">
                        <h5 class="offcanvas-title" id="offcanvasNavbar2Label">Menu</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                    </div>
                    <div class="offcanvas-body">
                        <ul class="navbar-nav align-items-center flex-grow-1">
                                                        <li class="nav-list mx-3">
                                <a href="/" class="nav-link px-2">
                                    <h5> 首页 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/free-nodes/" class="nav-link px-2">
                                    <h5> 免费节点 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/paid-subscribe/" class="nav-link px-2">
                                    <h5> 推荐机场 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/client.htm" class="nav-link px-2">
                                    <h5> 客户端 </h5>
                                </a>
                            </li>
                                                        <li class="nav-list mx-3">
                                <a href="/news/" class="nav-link px-2">
                                    <h5> 新闻资讯 </h5>
                                </a>
                            </li>
                                                    </ul>
                    </div>
                </div>
            </div>
        </nav>
    </section>
    <!-- Hero Section Starts -->
    <section id="hero">
        <div id="resources" class="hero container py-5 my-5">
            <div class="row flex-lg-row-reverse align-items-center g-5 py-5">
                <div class="col-10 col-sm-8 col-lg-6">
                </div>
                <div class="col-lg-6">
                    <div class="breadcrumb ">
                        <span class="item">
                            <a href="/">
                                <h5> <u>首页</u> </h5>
                            </a>
                        </span>
                        &nbsp;<h5>/</h5> &nbsp; 
                        <span class="item">
                            <a href="/news/">
                                <h5> <u>新闻资讯</u> </h5>
                            </a>
                        </span>
                        &nbsp;<h5>/</h5> &nbsp; 

                        <span class="item">
                            <h5>正文</h5>
                        </span>
                    </div>
                    <h1 class=" lh-1 mb-3">特殊线性表&#8212;&#8212;&#8212;-栈（1）</h1>
                </div>
            </div>
        </div>
    </section>
    <!-- Feature Section Starts -->
    <section id="features">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p><mark>栈是先进后出的特殊线性表，只允许在表的末端进行插入和删除，后面将介绍两种实现栈的方式，分别是基于数组的实现、基于链表的实现。</mark></p> <h2> <a id="_1" rel="nofollow"></a>栈的抽象定义</h2> <pre><code class="prism language-cpp"><span class="token keyword">class</span> <span class="token class-name">Mystack</span> <span class="token punctuation">{<!-- --></span> <span class="token keyword">public</span><span class="token operator">:</span> 	<span class="token function">Mystack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span> 	<span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>x<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 	<span class="token keyword">virtual</span> <span class="token keyword">bool</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>x<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 	<span class="token keyword">virtual</span> <span class="token keyword">bool</span> <span class="token function">Top</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>x<span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 	<span class="token keyword">virtual</span> <span class="token keyword">bool</span> <span class="token function">IsEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 	<span class="token keyword">virtual</span> <span class="token keyword">bool</span> <span class="token function">IsFull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 	<span class="token keyword">virtual</span> <span class="token keyword">int</span> <span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>   </code></pre> <h2> <a id="_19" rel="nofollow"></a>顺序栈-----------使用数组表示栈空间</h2> <p>定义：</p> <pre><code class="prism language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">once</span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"Mystack.h"</span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;assert.h&gt;</span></span> <span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>  <span class="token keyword">const</span> <span class="token keyword">int</span> stackIncreament <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>   <span class="token keyword">class</span> <span class="token class-name">SeqStack</span> <span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">Mystack</span></span> <span class="token punctuation">{<!-- --></span> <span class="token keyword">public</span><span class="token operator">:</span> 	<span class="token function">SeqStack</span><span class="token punctuation">(</span><span class="token keyword">int</span> sz <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment">//建立一个空栈</span> 	<span class="token operator">~</span><span class="token function">SeqStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> <span class="token keyword">delete</span><span class="token punctuation">[</span><span class="token punctuation">]</span>elements<span class="token punctuation">;</span> <span class="token punctuation">}</span>      <span class="token comment">//析构函数</span>  	<span class="token comment">//如果栈满，则溢出程序处理，否则插入x</span> 	<span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>                   	<span class="token comment">//如果栈空，则返回FALSE，否则使用x传递栈顶的值，top-1</span> 	<span class="token keyword">bool</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>  	<span class="token comment">//如果栈空，则返回FALSE，否则使用x传递栈顶的值</span> 	<span class="token keyword">bool</span> <span class="token function">Top</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>  	<span class="token comment">//判断栈是否为空</span> 	<span class="token keyword">bool</span> <span class="token function">IsEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> <span class="token punctuation">(</span>top <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span>  	<span class="token comment">//判断栈是都为满</span> 	<span class="token keyword">bool</span> <span class="token function">IsFull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> <span class="token punctuation">(</span>top <span class="token operator">==</span> maxSize <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span>  	<span class="token comment">//获取栈当前的size</span> 	<span class="token keyword">int</span> <span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> top <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span>  	<span class="token comment">//将栈置空</span> 	<span class="token keyword">void</span> <span class="token function">MakeEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		top <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span>  	<span class="token comment">//重载 操作 &lt;&lt;</span> 	<span class="token keyword">friend</span> ostream<span class="token operator">&amp;</span> <span class="token keyword">operator</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>ostream<span class="token operator">&amp;</span> os<span class="token punctuation">,</span> SeqStack<span class="token operator">&amp;</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">private</span><span class="token operator">:</span> 	<span class="token keyword">int</span> <span class="token operator">*</span>elements<span class="token punctuation">;</span>				<span class="token comment">//栈数组指针</span> 	<span class="token keyword">int</span> top<span class="token punctuation">;</span>					<span class="token comment">//栈顶指针</span> 	<span class="token keyword">int</span> maxSize<span class="token punctuation">;</span>				<span class="token comment">//栈的最大容量</span> 	<span class="token keyword">void</span> <span class="token function">overflowProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>		<span class="token comment">//溢出处理程序</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>   </code></pre> <p>实现：</p> <pre><code class="prism language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"SeqStack.h"</span></span>   <span class="token class-name">SeqStack</span><span class="token operator">::</span><span class="token function">SeqStack</span><span class="token punctuation">(</span><span class="token keyword">int</span> sz<span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">maxSize</span><span class="token punctuation">(</span>sz<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	elements <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>maxSize<span class="token punctuation">]</span><span class="token punctuation">;</span>		<span class="token comment">//创建栈的数组空间</span> 	<span class="token function">assert</span><span class="token punctuation">(</span>elements <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//断言：动态分配是否成功</span>  <span class="token punctuation">}</span>  <span class="token keyword">void</span> <span class="token class-name">SeqStack</span><span class="token operator">::</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span> x<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token comment">//首先判断栈是否已满，满则转入溢出处理</span> 	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">IsFull</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 		<span class="token function">overflowProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span>  	elements<span class="token punctuation">[</span><span class="token operator">++</span>top<span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>    <span class="token comment">//将top+1，再插入值x</span> <span class="token punctuation">}</span>  <span class="token keyword">bool</span> <span class="token class-name">SeqStack</span><span class="token operator">::</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span> x<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token comment">//先判断是否为空，为空则返回FALSE</span> 	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">IsEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span>  	x <span class="token operator">=</span> elements<span class="token punctuation">[</span>top<span class="token operator">--</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token comment">//使用x返回top所指，再讲top-1</span> 	<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>  <span class="token keyword">bool</span> <span class="token class-name">SeqStack</span><span class="token operator">::</span><span class="token function">Top</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span> x<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token comment">//空栈则为FALSE</span> 	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">IsEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span>  	<span class="token comment">//栈不为空，则返回栈顶元素的值</span> 	x <span class="token operator">=</span> elements<span class="token punctuation">[</span>top<span class="token punctuation">]</span><span class="token punctuation">;</span> 	<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>  ostream<span class="token operator">&amp;</span> <span class="token keyword">operator</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>ostream<span class="token operator">&amp;</span> os<span class="token punctuation">,</span> SeqStack<span class="token operator">&amp;</span> s<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token comment">//输出栈中元素</span> 	os <span class="token operator">&lt;&lt;</span> <span class="token string">"top = "</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span>top <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> 	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> s<span class="token punctuation">.</span>top<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		os <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">": "</span> <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span>elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">return</span> os<span class="token punctuation">;</span> <span class="token punctuation">}</span>   <span class="token keyword">void</span> <span class="token class-name">SeqStack</span><span class="token operator">::</span><span class="token function">overflowProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token comment">//栈溢出时，扩充栈的存储空间</span> 	<span class="token keyword">int</span> <span class="token operator">*</span>Newelement <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>maxSize <span class="token operator">+</span> stackIncreament<span class="token punctuation">]</span><span class="token punctuation">;</span> 	<span class="token keyword">if</span> <span class="token punctuation">(</span>Newelement <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		cout <span class="token operator">&lt;&lt;</span> <span class="token string">"分配内存失败"</span><span class="token punctuation">;</span> 		<span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> top<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		Newelement<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">delete</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elements<span class="token punctuation">;</span> 	elements <span class="token operator">=</span> Newelement<span class="token punctuation">;</span> <span class="token punctuation">}</span>  </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-71278.htm">动物疫苗多少钱一支啊图片（动物疫苗多少钱一支啊图片及价格）</a></p>
                                        <p>下一个：<a href="/news/article-71928.htm">动物医院好评语100字通用句子 动物医院好评语100字通用句子怎么写</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-36811.htm" title="宠物领养电子合同模板图片高清（宠物领养电子合同模板图片高清下载）">宠物领养电子合同模板图片高清（宠物领养电子合同模板图片高清下载）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-10-node-share.htm" title="「3月10日」每天更新|18M/S，2025年Vless免费机场订阅节点链接">「3月10日」每天更新|18M/S，2025年Vless免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-49169.htm" title="新手怎么联系厂家进货没有电话（怎样联系厂家拿到最便宜的货）">新手怎么联系厂家进货没有电话（怎样联系厂家拿到最便宜的货）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-24-today-vless-node.htm" title="「2月24日」每天更新|20.2M/S，2025年Vless免费机场订阅节点链接">「2月24日」每天更新|20.2M/S，2025年Vless免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-56679.htm" title="同安宠物领养中心地址在哪里 同安宠物领养中心地址在哪里啊">同安宠物领养中心地址在哪里 同安宠物领养中心地址在哪里啊</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-13-today-vless-node.htm" title="「2月13日」每天更新|21.3M/S，2025年Vless免费机场订阅节点链接">「2月13日」每天更新|21.3M/S，2025年Vless免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-6-free-vless-node.htm" title="「1月6日」每天更新|20.3M/S，2025年Vless免费机场订阅节点链接">「1月6日」每天更新|20.3M/S，2025年Vless免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-38277.htm" title="win11系统怎么查看指定端口信息">win11系统怎么查看指定端口信息</a></li>
                        <li class="py-2"><a href="/news/article-42245.htm" title="动物诊所英语 动物诊所英语怎么说">动物诊所英语 动物诊所英语怎么说</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-12-free-subscribe-node.htm" title="「2月12日」每天更新|19.8M/S，2025年Vless免费机场订阅节点链接">「2月12日」每天更新|19.8M/S，2025年Vless免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">39</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">83</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <section class="footer-2">
        <footer class="container footer-2-container  d-flex align-items-center">
            <div class="col-md-4 d-flex justify-content-center justify-content-md-start">
                <p class="footer2-paragraph">© All rights reserved.</p>
            </div>
            <div class="col-md-4 text-center">
                <a href="#" class="text-decoration-none">
                    <iconify-icon class="footer-2-icon px-2" icon="ri:facebook-fill"></iconify-icon>
                </a>
                <a href="#" class="text-decoration-none">
                    <iconify-icon class="footer-2-icon px-2" icon="ri:twitter-fill"></iconify-icon>
                </a>
                <a href="#" class="text-decoration-none">
                    <iconify-icon class="footer-2-icon px-2" icon="ri:instagram-fill"></iconify-icon>
                </a>
            </div>
            <div class="col-md-4">
                <p class="footer2-paragraph d-flex justify-content-center justify-content-md-end">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    Vless Node机场订阅官网 版权所有 Powered by WordPress
                </p>
            </div>
        </footer>
    </section>
    <!-- Scripts  Starts -->
    <script src="/assets/website/js/frontend/vlessnode/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/vlessnode/plugins.js"></script>
    <script src="/assets/website/js/frontend/vlessnode/script.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/Swiper/9.4.1/swiper-bundle.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.0-alpha3/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/iconify-icon@1.0.7/dist/iconify-icon.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>